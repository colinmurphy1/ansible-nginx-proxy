{{ ansible_managed | comment }}

{# http/2 is configured differently in nginx v1.25.1 or newer #}
{% set http2_directive = nginx_version.stdout is version('1.25.1', '>=') %}

{# Handle the default vhost differently #}
{% if item.name | lower == "default" %}
# Default vhost - http
server {
    listen {{ item.http_port | default(nginx_port_http) }} default_server;
    listen [::]:{{ item.http_port | default(nginx_port_http) }} default_server;
    server_name _;
    return 444;
}

# Default vhost - https
server {
    listen {{ item.https_port | default(nginx_port_https) }} ssl{% if http2_directive is false%} http2{% endif %} default_server;
    listen [::]:{{ item.https_port | default(nginx_port_https) }} ssl{% if http2_directive is false%} http2{% endif %} default_server;
    server_name _;

    ssl_certificate {{ item.cert_path | default(nginx_default_cert) }};
    ssl_certificate_key {{ item.cert_key_path | default(nginx_default_cert_key) }};
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;

    # standardize to a modern ssl cert on the default vhost
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;
    add_header Strict-Transport-Security "max-age=63072000" always;

    return 444;
}
{% else %}
upstream {{ item.name | lower }}_primary {
{% for upstream in item.upstreams %}
    server {{ upstream.address }}:{{ upstream.port }};
{% endfor %}
}

server {
    server_name {{ item.servername }};
{% if not vhost.https | default(true) %}
    listen {{ item.listen_port | default(80) }};
    listen [::]:{{ item.listen_port | default(80) }};
{% else %}
    listen {{ item.listen_port | default(443) }} ssl{% if http2_directive is false%} http2{% endif %};
    listen [::]:{{ item.listen_port | default(443) }} ssl{% if http2_directive is false%} http2{% endif %};

    ssl_certificate {{ item.cert_path | default(nginx_default_cert) }};
    ssl_certificate_key {{ item.cert_key_path | default(nginx_default_cert_key) }};
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;

{# An option to use weaker TLS is provided for certain applications such as Plex to function #}
{% if item.modern_ssl | default(true) %}
    # Using Mozilla 'modern' configuration
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;
{% else %}
    # Using Mozilla 'intermediate' configuration
    ssl_dhparam {{ nginx_dhparam_path }};
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;
{% endif %}

    add_header Strict-Transport-Security "max-age=63072000" always;
{% endif %}

{% if item.logging | default(true) %}
    # logging
    access_log /var/log/nginx/{{ item.name }}_access.log;
    error_log /var/log/nginx/{{ item.name }}_error.log error;
{% endif %}

    # Vhost primary upstream
    location / {
{% if item.allowed_ips is defined and item.allowed_ips|length > 0 %}
{% for ip in item.allowed_ips %}
        allow {{ ip }};
{% endfor %}
        deny all;
{% endif %}
        proxy_set_header Connection $http_connection;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;
        proxy_connect_timeout 10s;
{% if item.ssl_verify|default(true) is false %}
        proxy_ssl_verify off;
{% endif %}
{% if item.extra_params is defined %}
{{ item.extra_params | indent(width=8, first=True )}}
{% endif %}
        proxy_pass {{ item.upstream_protocol | default('http') }}://{{ item.name | lower }}_primary;
    }
}

{% if vhost.https | default(true) %}
server {
    server_name {{ item.servername }};
    listen {{ item.listen_port | default(80) }};
    listen [::]:{{ item.listen_port | default(80) }};

    return 301 https://$host$request_uri;
}
{% endif %}

{% endif %}
